(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{521:function(t,e,a){"use strict";a.r(e);var r=a(83),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"apijson使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apijson使用"}},[t._v("#")]),t._v(" APIJSON使用")]),t._v(" "),a("h2",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[t._v("#")]),t._v(" 环境准备")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载项目"),a("OutboundLink")],1),t._v("，可下载压缩包或者克隆项目")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/srbmp/APIJSON%E4%BD%BF%E7%94%A8-%E7%8E%AF%E5%A2%83%E5%A4%87%E6%B3%A8-%E4%B8%8B%E8%BD%BD%E9%A1%B9%E7%9B%AE.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("导入项目，"),a("code",[t._v("/APIJSON-Java-Server")]),t._v("该目录下的为Java版本")]),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONDemo",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIJSONDemo"),a("OutboundLink")],1),t._v(" 为 "),a("code",[t._v("APIJSON + SpringBoot")]),t._v("的最简单的初级使用 Demo"),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONBoot",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIJSONBoot"),a("OutboundLink")],1),t._v(" 为 "),a("code",[t._v("APIJSON + SpringBoot")]),t._v(" 的接近生产环境成品的 Demo"),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONFinal",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIJSONFinal"),a("OutboundLink")],1),t._v(" 为 "),a("code",[t._v("APIJSON + JFinal")]),t._v(" 的接近生产环境成品的 Demo"),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONDemo-Druid",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIJSONDemo-Druid"),a("OutboundLink")],1),t._v(" 为 "),a("code",[t._v("APIJSON + SpringBoot + Druid")]),t._v("的简单初级使用 Demo"),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONDemo-HikariCP",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIJSONDemo-HikariCP"),a("OutboundLink")],1),t._v(" 为 "),a("code",[t._v("APIJSON + SpringBoot + HikariCP")]),t._v("的简单初级使用 Demo"),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONBoot-MultiDataSource",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIJSONBoot-MultiDataSource"),a("OutboundLink")],1),t._v(" 为"),a("code",[t._v("APIJSON + SpringBoot + Druid + HikariCP")]),t._v(" 的接近生产环境成品的多数据源 Demo，\n并且把"),a("a",{attrs:{href:"https://github.com/TommyLemon/APIAuto",target:"_blank",rel:"noopener noreferrer"}},[t._v("APIAuto"),a("OutboundLink")],1),t._v(" 的源码放到了 "),a("a",{attrs:{href:"https://github.com/APIJSON/APIJSON-Demo/tree/master/APIJSON-Java-Server/APIJSONBoot-MultiDataSource/src/main/resources/static",target:"_blank",rel:"noopener noreferrer"}},[t._v("src/main/resources/static"),a("OutboundLink")],1),t._v(" 目录，\n可以用浏览器打开本地主页 "),a("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080"),a("OutboundLink")],1),t._v(" 来调试")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("导入配置表")])]),t._v(" "),a("p",[t._v("创建一个新的数据库或者与现有系统数据库耦合到一起（个人推荐前者，与现有系统数据库耦合会导致表过多），执行"),a("code",[t._v("MySQL")]),t._v("目录下的"),a("code",[t._v("sys.sql")]),t._v("脚本即可，"),a("code",[t._v("single")]),t._v(" 目录下的"),a("code",[t._v("SQL")]),t._v("脚本是为单个表的")])])]),t._v(" "),a("h2",{attrs:{id:"启动项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动项目"}},[t._v("#")]),t._v(" 启动项目")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("APIJSONDemo基础项目")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("找到"),a("code",[t._v("DemoSQLConfig")]),t._v(" 配置类，修改"),a("code",[t._v("MySQL")]),t._v("连接配置，"),a("code",[t._v("DEFAULT_SCHEMA")]),t._v(" 连接数据库名，这个连接的数据库必须包含"),a("code",[t._v("APIJSON")]),t._v(" 所需表，下面的连接URL不需要带数据库名")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/srbmp/APIJSON%E4%BD%BF%E7%94%A8-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE-%E5%9F%BA%E7%A1%80%E9%A1%B9%E7%9B%AE.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("找到"),a("code",[t._v("DemoApplication")]),t._v(" 启动类，运行，看到如下日志表示启动成功，也可以通过测试"),a("a",{attrs:{href:"http://localhost:8080/get/%7B%7D",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("http://localhost:8080/get/{}")]),a("OutboundLink")],1),t._v("接口测试，返回code为200表示连接成功，如果是404请注意关闭防火墙")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/srbmp/APIJSON%E4%BD%BF%E7%94%A8-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE-%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ok"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"msg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sql:generate|cache|execute|maxExecute"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0|0|0|200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"depth:count|max"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1|5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"time:start|duration|end"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1638241166455|1|1638241166456"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("启动后默认端口为8080，如需修改可在"),a("code",[t._v("DemoApplication")]),t._v(" 中 "),a("code",[t._v("customize")]),t._v(" 方法中修改")])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("APIJSONBoot，接近正式使用环境")])])]),t._v(" "),a("p",[t._v("​\t与基础本启动流程一致")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("APIJSONBoot-MultiDataSource， 多数据源版")])])]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("启动流程与基础版一致")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("该版本可能存在存在依赖问题，有两种方式解决。一是将同目录下的"),a("code",[t._v("lib")]),t._v("目录下的"),a("code",[t._v("jar")]),t._v("添加到"),a("code",[t._v("Build Path")]),t._v("中，二是将"),a("code",[t._v("pom")]),t._v(" 文件中相关依赖放开，注意使用"),a("code",[t._v("maven")]),t._v(" 方式可能存在版本与实际代码不一致问题，需要注意"),a("code",[t._v("DemoController")]),t._v(" ,版本不一致此类需要做一些调整，依据错误提示该即可")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/srbmp/APIJSON%E4%BD%BF%E7%94%A8-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE-maven%E4%BE%9D%E8%B5%96.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("多数据源使用方式")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("application.yml")]),t._v("中添加多数据源配置，注意连接URL不要加数据库名")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("DemoDataSourceConfig")]),t._v(" 中添加与"),a("code",[t._v("application.yml")]),t._v("对应的数据源")])]),t._v(" "),a("li",[a("p",[t._v("接口查询动态切换数据源")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("多个数据库在同一服务器下，只需要在查询参数中添加"),a("code",[t._v("@schema")]),t._v("字段即可，该字段是在表名前面增加数据库前缀")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SouCampaignMain"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1434695625865207810"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@schema"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sou_module"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("跨服务器使用多数据源，使用"),a("code",[t._v("@datasource")]),t._v("字段，指名使用那个数据源连接，在配合 "),a("code",[t._v("@schema")]),t._v(" 使用，就能实现跨服务的动态数据源切换")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SouCampaignMain"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1434695625865207810"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@schema"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sou_module"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@datasource"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"druid"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("注意："),a("code",[t._v("@schema")]),t._v(" 和 "),a("code",[t._v("@datasource")]),t._v(" 都是在表名层级下")])])])])])]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("ul",[a("li",[t._v("调式接口时建议使用"),a("code",[t._v("Postman")]),t._v("，数据库建议开启忽略大小写，"),a("code",[t._v("APIJSON")]),t._v("启动会去校验"),a("code",[t._v("access")]),t._v("表权限信息，连接"),a("code",[t._v("MySQL")]),t._v("时 "),a("code",[t._v("access")]),t._v(" 会变成首字母大写"),a("code",[t._v("Access")]),t._v("，如果"),a("code",[t._v("MySQL")]),t._v("没有开启忽略大小写，则是提示找不到表")]),t._v(" "),a("li",[t._v("需要在"),a("code",[t._v("APIJSON")]),t._v("中增加一张表控制，就需要在"),a("code",[t._v("access")]),t._v("表添加一个权限数据，否则会提示无权访问，"),a("code",[t._v("access")]),t._v(" 中 "),a("code",[t._v("name")]),t._v(" 为表的实际名字， "),a("code",[t._v("alias")]),t._v("为别名，查询某个表数据时，使用别名，别名命名规则和Java的一致，驼峰规则（强制性的），"),a("code",[t._v("APIJSON")]),t._v("对命名风格这块限制的很死，如果没有设置别名，那实际的表名就必须按照驼峰规则命名，其余"),a("code",[t._v("get")]),t._v("、"),a("code",[t._v("post")]),t._v("等接口权限可以按照默认值设置或者根据实际项目需求来去设置")])])])}),[],!1,null,null,null);e.default=s.exports}}]);